# Makefile for ppalgs (was: ducting)

LOCALDIR=/prod/forecast/opt

# Platform suffix
PLT=

# Compilers etc
CXX=/sw/sdev/Modules/gcc/gcc-4.8.2/bin/g++
#CC=/sw/sdev/Modules/gcc/gcc-4.8.2/bin/gcc

LD=icc
#AR=ar
#ARFLAGS=-cr

# CXX-flags
CXXFLAGS=# -O3
CXXLDFLAGS=
#
# C-flags
CFLAGS=# -O3
CLDFLAGS=

# log4cxx

HASMILOGGER := $(shell test -f   $(LOCALDIR)/lib/libmiLogger.a && echo YES)

ifeq ($(HASMILOGGER),YES)
LOGGDEF=-DNOLOG4CXX
LOGGLIBS=-L$(LOCALDIR)/lib -lmiLogger
else
#LOGGDEF=-DHAVE_LOG4CXX
#LOGGINC=
#LOGGLIBS=-L$(LOCALDIR)/lib -llog4cxx
endif


BINDIR=bin$(PLT)
LIBDIR=lib$(PLT)
INCDIR=.
LOCALINC=$(LOCALDIR)/include

VPATH = src

INCLUDE= -I./include -I$(INCDIR) -I/prod/forecast/lib/fimex/0.55.1/include \
-I/sw/sdev/Modules/netcdf/netcdf-4.3.1/include

LINKS=-L$(LOCALDIR)/lib \
-L/prod/forecast/lib/fimex/0.55.1/lib -lfimex \
-lmiLogger -lxml2 -lexpat -lopenjpeg \
-L/sw/sdev/Modules/netcdf/netcdf-4.3.1/lib -lnetcdf_c++4 \
-lfelt -L/sw/sdev/Modules/boost/boost-1.48.0//lib \ 
-lboost_date_time -lboost_filesystem  -lboost_iostreams \
-lboost_program_options -lboost_regex \
-L/sw/sdev/Modules/netcdf/netcdf-4.1.3/lib -lnetcdf -lnetcdf \
-L/prod/forecast/lib/grib_api/1.9.9//lib -lgrib_api \
-L/sw/sdev/Modules/proj/proj-4.7.0//lib -lproj \
-L/sw/sdev/Modules/udunits/udunits-2.1.24//lib  -ludunits2  -lm

OPTIONS=-fopenmp -fPIC

#----------------------------------------------------------------------------

all: directories version $(BINDIR)/ppalgs

#----------------------------------------------------------------------------

CXXOBJ= Ducting.o Icing.o Contrails.o NetCDFHandler.o GribHandler.o ppalgs.o

#----------------------------------------------------------------------------

CXXSRC= Ducting.cpp Icing.cpp Contrails.cpp NetCDFHandler.cpp GribHandler.cpp ppalgs.cpp 

ALLSRC= $(CXXSRC)
ALLOBJ= $(CXXOBJ)

#----------------------------------------------------------------------------

# From .cpp to .o
%.o: %.cpp
	$(CXX) -std=c++0x $(CXXFLAGS) -c $< $(INCLUDE)

# From .c to .o
%.o: %.c
	$(CC) -c $(CXXFLAGS) $< $(INCLUDE)

#---------------------------------------------------------------------------

directories:
	if [ ! -d $(BINDIR) ] ; then mkdir $(BINDIR) ; fi

#----------------------------------------------------------------------------

$(BINDIR)/ppalgs: $(ALLOBJ) 
	$(LD) -std=c++0x -o $@ $(CXXFLAGS) $(OPTIONS) $(ALLOBJ) $(LINKS)

#----------------------------------------------------------------------------

VERSIONHEADER=ppalgsVersion.h
version:
	@if [ -s $(VERSIONHEADER) ]; then \
	  olddate=`grep version_string $(VERSIONHEADER) | cut -f2 -d\"`; \
	else \
	  olddate="firsttime"; \
	fi; \
	today=`date +%Y-%m-%d`; \
	if [ ! $$olddate = $$today ]; then \
	  rm -f $(VERSIONHEADER); \
	  echo '#ifndef _version_h_' > $(VERSIONHEADER); \
	  echo '#define _version_h_' >> $(VERSIONHEADER); \
	  echo 'const std::string version_string= "'$$today'";' >> $(VERSIONHEADER); \
	  echo '#endif' >> $(VERSIONHEADER); \
	  chmod 0664 $(VERSIONHEADER); \
	  echo "UPDATED $(VERSIONHEADER) $$today"; \
	else \
	  echo "UNCHANGED $(VERSIONHEADER) $$olddate"; \
	fi

#----------------------------------------------------------------------------

pretty:
	find . \( -name '*~' \) -exec rm -f {} \;

binclean:
	rm -f $(BINDIR)/ppalgs

clean:
	@make -fMakefile.vilje pretty
	rm -f *.o

veryclean:
	@make -fMakefile.vilje pretty
	@make -fMakefile.vilje binclean
	@make -fMakefile.vilje clean
